$schema: https://json-schema.org/draft-07/schema
$defs:
  Accounts:
    additionalProperties: false
    description: InNoHassle Accounts integration settings
    properties:
      api_url:
        default: https://api.innohassle.ru/accounts/v0
        description: URL of the Accounts API
        title: Api Url
        type: string
      api_jwt_token:
        description: JWT token for accessing the Accounts API as a service
        format: password
        title: Api Jwt Token
        type: string
        writeOnly: true
    required:
    - api_jwt_token
    title: Accounts
    type: object
  ApiSettings:
    additionalProperties: false
    properties:
      app_root_path:
        default: ''
        description: Prefix for the API path (e.g. "/api/v0")
        title: App Root Path
        type: string
      database_uri:
        description: MongoDB database settings
        examples:
        - mongodb://mongoadmin:secret@localhost:27017/db?authSource=admin
        - mongodb://mongoadmin:secret@db:27017/db?authSource=admin
        format: password
        title: Database Uri
        type: string
        writeOnly: true
      unoserver_server:
        default: 127.0.0.1
        description: unoserver server network
        title: Unoserver Server
        type: string
      unoserver_port:
        default: 2003
        description: Unoserver server network port
        title: Unoserver Port
        type: integer
      cups_server:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: CUPS hostname, if None then /run/cups-socket/cups.sock will be
          used
        examples:
        - localhost
        - cups
        - 127.0.0.1
        title: Cups Server
      cups_port:
        default: 631
        description: CUPS port
        title: Cups Port
        type: integer
      cups_user:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: CUPS username, if None then current user will be used
        title: Cups User
      cups_password:
        anyOf:
        - format: password
          type: string
          writeOnly: true
        - type: 'null'
        default: null
        description: CUPS password
        title: Cups Password
      printers_list:
        description: List of printers
        items:
          $ref: '#/$defs/Printer'
        title: Printers List
        type: array
      cors_allow_origin_regex:
        default: .*
        description: 'Allowed origins for CORS: from which domains requests to the
          API are allowed. Specify as a regex: `https://.*.innohassle.ru`'
        title: Cors Allow Origin Regex
        type: string
      accounts:
        $ref: '#/$defs/Accounts'
      temp_dir:
        default: ./tmp
        description: Temporary directory to store converted and input files
        title: Temp Dir
        type: string
    required:
    - database_uri
    - printers_list
    - accounts
    title: ApiSettings
    type: object
  BotSettings:
    additionalProperties: false
    properties:
      bot_token:
        description: Token from BotFather
        format: password
        title: Bot Token
        type: string
        writeOnly: true
      api_url:
        default: http://127.0.0.1:8000
        description: Print API url
        title: Api Url
        type: string
    required:
    - bot_token
    title: BotSettings
    type: object
  Printer:
    additionalProperties: false
    properties:
      display_name:
        description: Display name of the printer, it will be shown to the user
        title: Display Name
        type: string
      cups_name:
        description: Name of the printer in CUPS
        title: Cups Name
        type: string
      ipp:
        description: IP address of the printer for accessing IPP. Specify a port if
          it differs from 631.
        examples:
        - 192.168.1.1
        - host.docker.internal:62102
        - 127.0.0.1:62102
        title: Ipp
        type: string
    required:
    - display_name
    - cups_name
    - ipp
    title: Printer
    type: object
additionalProperties: false
description: Settings for the application.
properties:
  $schema:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    title: $Schema
  api:
    $ref: '#/$defs/ApiSettings'
    default: null
  bot:
    $ref: '#/$defs/BotSettings'
    default: null
title: Settings
type: object
